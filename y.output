Terminals unused in grammar

   ERROR


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers INTEGER

   10 identifiers: ident
   11            | ident COMMA identifiers

   12 ident: IDENT

   13 statements: %empty
   14           | statement SEMICOLON statements

   15 statement: var ASSIGN expression
   16          | IF bool_exp THEN statements ENDIF
   17          | IF bool_exp THEN statements ELSE statements ENDIF
   18          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 $@1: %empty

   25 statement: var $@1 error expression

   26 vars: var
   27     | var COMMA vars

   28 bool_exp: relation_and_exp
   29         | relation_and_exp relation_and_exps

   30 relation_and_exps: OR relation_and_exp
   31                  | OR relation_and_exp relation_and_exps

   32 relation_and_exp: relation_exp
   33                 | relation_exp relation_exps

   34 relation_exps: AND relation_exp
   35              | AND relation_exp relation_exps

   36 relation_exp: expression comp expression
   37             | NOT expression comp expression
   38             | TRUE
   39             | NOT TRUE
   40             | FALSE
   41             | NOT FALSE
   42             | L_PAREN bool_exp R_PAREN
   43             | NOT L_PAREN bool_exp R_PAREN

   44 comp: EQ
   45     | NEQ
   46     | LT
   47     | GT
   48     | LTE
   49     | GTE

   50 expression: multiplicative_expression
   51           | multiplicative_expression multiplicative_expressions

   52 multiplicative_expressions: ADD multiplicative_expression
   53                           | SUB multiplicative_expression
   54                           | ADD multiplicative_expression multiplicative_expressions
   55                           | SUB multiplicative_expression multiplicative_expressions

   56 multiplicative_expression: term
   57                          | term terms

   58 terms: MULT term
   59      | DIV term
   60      | MOD term
   61      | MULT term terms
   62      | DIV term terms
   63      | MOD term terms

   64 term: var
   65     | SUB var
   66     | NUMBER
   67     | SUB NUMBER
   68     | L_PAREN expression R_PAREN
   69     | SUB L_PAREN expression R_PAREN
   70     | IDENT L_PAREN R_PAREN
   71     | IDENT L_PAREN expressions R_PAREN

   72 expressions: expression
   73            | expression COMMA expressions

   74 var: ident
   75    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 25
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 7 8 9
ARRAY (266) 8
OF (267) 8
IF (268) 16 17
THEN (269) 16 17
ENDIF (270) 16 17
ELSE (271) 17
WHILE (272) 18 19
DO (273) 19
BEGINLOOP (274) 18 19
ENDLOOP (275) 18 19
CONTINUE (276) 22
READ (277) 20
WRITE (278) 21
AND (279) 34 35
OR (280) 30 31
NOT (281) 37 39 41 43
TRUE (282) 38 39
FALSE (283) 40 41
RETURN (284) 23
SUB (285) 53 55 65 67 69
ADD (286) 52 54
MULT (287) 58 61
DIV (288) 59 62
MOD (289) 60 63
EQ (290) 44
NEQ (291) 45
LT (292) 46
GT (293) 47
LTE (294) 48
GTE (295) 49
SEMICOLON (296) 4 6 14
COLON (297) 7 8
COMMA (298) 11 27 73
L_PAREN (299) 42 43 68 69 70 71
R_PAREN (300) 42 43 68 69 70 71
L_SQUARE_BRACKET (301) 8 75
R_SQUARE_BRACKET (302) 8 75
ASSIGN (303) 15
NUMBER (304) 8 66 67
IDENT (305) 4 12 70 71
ERROR (306)
UMINUS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6, on right: 4 6
declaration (58)
    on left: 7 8 9, on right: 6
identifiers (59)
    on left: 10 11, on right: 7 8 9 11
ident (60)
    on left: 12, on right: 10 11 74 75
statements (61)
    on left: 13 14, on right: 4 14 16 17 18 19
statement (62)
    on left: 15 16 17 18 19 20 21 22 23 25, on right: 14
$@1 (63)
    on left: 24, on right: 25
vars (64)
    on left: 26 27, on right: 20 21 27
bool_exp (65)
    on left: 28 29, on right: 16 17 18 19 42 43
relation_and_exps (66)
    on left: 30 31, on right: 29 31
relation_and_exp (67)
    on left: 32 33, on right: 28 29 30 31
relation_exps (68)
    on left: 34 35, on right: 33 35
relation_exp (69)
    on left: 36 37 38 39 40 41 42 43, on right: 32 33 34 35
comp (70)
    on left: 44 45 46 47 48 49, on right: 36 37
expression (71)
    on left: 50 51, on right: 15 23 25 36 37 68 69 72 73 75
multiplicative_expressions (72)
    on left: 52 53 54 55, on right: 51 54 55
multiplicative_expression (73)
    on left: 56 57, on right: 50 51 52 53 54 55
terms (74)
    on left: 58 59 60 61 62 63, on right: 57 61 62 63
term (75)
    on left: 64 65 66 67 68 69 70 71, on right: 56 57 58 59 60 61 62
    63
expressions (76)
    on left: 72 73, on right: 71 73
var (77)
    on left: 74 75, on right: 15 25 26 27 64 65


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 10

   12 ident: IDENT .

    $default  reduce using rule 12 (ident)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . INTEGER

    INTEGER  shift, and go to state 17
    COLON    shift, and go to state 18


State 14

   10 identifiers: ident .
   11            | ident . COMMA identifiers

    COMMA  shift, and go to state 19

    $default  reduce using rule 10 (identifiers)


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 21
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    9 declaration: identifiers INTEGER .

    $default  reduce using rule 9 (declaration)


State 18

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 19

   11 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 10

    identifiers  go to state 24
    ident        go to state 14


State 20

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 25
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 21

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 22

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 23

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 24

   11 identifiers: ident COMMA identifiers .

    $default  reduce using rule 11 (identifiers)


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 27


State 26

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    $default  reduce using rule 13 (statements)

    ident       go to state 38
    statements  go to state 39
    statement   go to state 40
    var         go to state 41


State 30

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 31

   16 statement: IF . bool_exp THEN statements ENDIF
   17          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    bool_exp                   go to state 50
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 32

   18 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    bool_exp                   go to state 57
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 33

   19 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 58


State 34

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 35

   20 statement: READ . vars

    IDENT  shift, and go to state 10

    ident  go to state 38
    vars   go to state 59
    var    go to state 60


State 36

   21 statement: WRITE . vars

    IDENT  shift, and go to state 10

    ident  go to state 38
    vars   go to state 61
    var    go to state 60


State 37

   23 statement: RETURN . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 63
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 38

   74 var: ident .
   75    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 74 (var)


State 39

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 65


State 40

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 66


State 41

   15 statement: var . ASSIGN expression
   25          | var . $@1 error expression

    ASSIGN  shift, and go to state 67

    $default  reduce using rule 24 ($@1)

    $@1  go to state 68


State 42

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 69


State 43

   37 relation_exp: NOT . expression comp expression
   39             | NOT . TRUE
   41             | NOT . FALSE
   43             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 70
    FALSE    shift, and go to state 71
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 73
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 44

   38 relation_exp: TRUE .

    $default  reduce using rule 38 (relation_exp)


State 45

   40 relation_exp: FALSE .

    $default  reduce using rule 40 (relation_exp)


State 46

   65 term: SUB . var
   67     | SUB . NUMBER
   69     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 75
    IDENT    shift, and go to state 10

    ident  go to state 38
    var    go to state 76


State 47

   42 relation_exp: L_PAREN . bool_exp R_PAREN
   68 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    bool_exp                   go to state 77
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 78
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 48

   66 term: NUMBER .

    $default  reduce using rule 66 (term)


State 49

   12 ident: IDENT .
   70 term: IDENT . L_PAREN R_PAREN
   71     | IDENT . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 79

    $default  reduce using rule 12 (ident)


State 50

   16 statement: IF bool_exp . THEN statements ENDIF
   17          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 80


State 51

   28 bool_exp: relation_and_exp .
   29         | relation_and_exp . relation_and_exps

    OR  shift, and go to state 81

    $default  reduce using rule 28 (bool_exp)

    relation_and_exps  go to state 82


State 52

   32 relation_and_exp: relation_exp .
   33                 | relation_exp . relation_exps

    AND  shift, and go to state 83

    $default  reduce using rule 32 (relation_and_exp)

    relation_exps  go to state 84


State 53

   36 relation_exp: expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 91


State 54

   50 expression: multiplicative_expression .
   51           | multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 50 (expression)

    multiplicative_expressions  go to state 94


State 55

   56 multiplicative_expression: term .
   57                          | term . terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 56 (multiplicative_expression)

    terms  go to state 98


State 56

   64 term: var .

    $default  reduce using rule 64 (term)


State 57

   18 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 99


State 58

   19 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    $default  reduce using rule 13 (statements)

    ident       go to state 38
    statements  go to state 100
    statement   go to state 40
    var         go to state 41


State 59

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


State 60

   26 vars: var .
   27     | var . COMMA vars

    COMMA  shift, and go to state 101

    $default  reduce using rule 26 (vars)


State 61

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


State 62

   68 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 102
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 63

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


State 64

   75 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 103
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 65

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 66

   14 statements: statement SEMICOLON . statements

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    $default  reduce using rule 13 (statements)

    ident       go to state 38
    statements  go to state 104
    statement   go to state 40
    var         go to state 41


State 67

   15 statement: var ASSIGN . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 105
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 68

   25 statement: var $@1 . error expression

    error  shift, and go to state 106


State 69

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 70

   39 relation_exp: NOT TRUE .

    $default  reduce using rule 39 (relation_exp)


State 71

   41 relation_exp: NOT FALSE .

    $default  reduce using rule 41 (relation_exp)


State 72

   43 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   68 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    bool_exp                   go to state 107
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 78
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 73

   37 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 108


State 74

   69 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 109
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 75

   67 term: SUB NUMBER .

    $default  reduce using rule 67 (term)


State 76

   65 term: SUB var .

    $default  reduce using rule 65 (term)


State 77

   42 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 110


State 78

   36 relation_exp: expression . comp expression
   68 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86
    LT       shift, and go to state 87
    GT       shift, and go to state 88
    LTE      shift, and go to state 89
    GTE      shift, and go to state 90
    R_PAREN  shift, and go to state 111

    comp  go to state 91


State 79

   70 term: IDENT L_PAREN . R_PAREN
   71     | IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    R_PAREN  shift, and go to state 112
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 113
    multiplicative_expression  go to state 54
    term                       go to state 55
    expressions                go to state 114
    var                        go to state 56


State 80

   16 statement: IF bool_exp THEN . statements ENDIF
   17          | IF bool_exp THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    $default  reduce using rule 13 (statements)

    ident       go to state 38
    statements  go to state 115
    statement   go to state 40
    var         go to state 41


State 81

   30 relation_and_exps: OR . relation_and_exp
   31                  | OR . relation_and_exp relation_and_exps

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    relation_and_exp           go to state 116
    relation_exp               go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 82

   29 bool_exp: relation_and_exp relation_and_exps .

    $default  reduce using rule 29 (bool_exp)


State 83

   34 relation_exps: AND . relation_exp
   35              | AND . relation_exp relation_exps

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    relation_exp               go to state 117
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 84

   33 relation_and_exp: relation_exp relation_exps .

    $default  reduce using rule 33 (relation_and_exp)


State 85

   44 comp: EQ .

    $default  reduce using rule 44 (comp)


State 86

   45 comp: NEQ .

    $default  reduce using rule 45 (comp)


State 87

   46 comp: LT .

    $default  reduce using rule 46 (comp)


State 88

   47 comp: GT .

    $default  reduce using rule 47 (comp)


State 89

   48 comp: LTE .

    $default  reduce using rule 48 (comp)


State 90

   49 comp: GTE .

    $default  reduce using rule 49 (comp)


State 91

   36 relation_exp: expression comp . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 118
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 92

   53 multiplicative_expressions: SUB . multiplicative_expression
   55                           | SUB . multiplicative_expression multiplicative_expressions

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    multiplicative_expression  go to state 119
    term                       go to state 55
    var                        go to state 56


State 93

   52 multiplicative_expressions: ADD . multiplicative_expression
   54                           | ADD . multiplicative_expression multiplicative_expressions

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    multiplicative_expression  go to state 120
    term                       go to state 55
    var                        go to state 56


State 94

   51 expression: multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 51 (expression)


State 95

   58 terms: MULT . term
   61      | MULT . term terms

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident  go to state 38
    term   go to state 121
    var    go to state 56


State 96

   59 terms: DIV . term
   62      | DIV . term terms

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident  go to state 38
    term   go to state 122
    var    go to state 56


State 97

   60 terms: MOD . term
   63      | MOD . term terms

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident  go to state 38
    term   go to state 123
    var    go to state 56


State 98

   57 multiplicative_expression: term terms .

    $default  reduce using rule 57 (multiplicative_expression)


State 99

   18 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    $default  reduce using rule 13 (statements)

    ident       go to state 38
    statements  go to state 124
    statement   go to state 40
    var         go to state 41


State 100

   19 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 125


State 101

   27 vars: var COMMA . vars

    IDENT  shift, and go to state 10

    ident  go to state 38
    vars   go to state 126
    var    go to state 60


State 102

   68 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 111


State 103

   75 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 127


State 104

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 105

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 106

   25 statement: var $@1 error . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 128
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 107

   43 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 129


State 108

   37 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 130
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 109

   69 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 131


State 110

   42 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 42 (relation_exp)


State 111

   68 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 68 (term)


State 112

   70 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 70 (term)


State 113

   72 expressions: expression .
   73            | expression . COMMA expressions

    COMMA  shift, and go to state 132

    $default  reduce using rule 72 (expressions)


State 114

   71 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 133


State 115

   16 statement: IF bool_exp THEN statements . ENDIF
   17          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 134
    ELSE   shift, and go to state 135


State 116

   30 relation_and_exps: OR relation_and_exp .
   31                  | OR relation_and_exp . relation_and_exps

    OR  shift, and go to state 81

    $default  reduce using rule 30 (relation_and_exps)

    relation_and_exps  go to state 136


State 117

   34 relation_exps: AND relation_exp .
   35              | AND relation_exp . relation_exps

    AND  shift, and go to state 83

    $default  reduce using rule 34 (relation_exps)

    relation_exps  go to state 137


State 118

   36 relation_exp: expression comp expression .

    $default  reduce using rule 36 (relation_exp)


State 119

   53 multiplicative_expressions: SUB multiplicative_expression .
   55                           | SUB multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 53 (multiplicative_expressions)

    multiplicative_expressions  go to state 138


State 120

   52 multiplicative_expressions: ADD multiplicative_expression .
   54                           | ADD multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 52 (multiplicative_expressions)

    multiplicative_expressions  go to state 139


State 121

   58 terms: MULT term .
   61      | MULT term . terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 58 (terms)

    terms  go to state 140


State 122

   59 terms: DIV term .
   62      | DIV term . terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 59 (terms)

    terms  go to state 141


State 123

   60 terms: MOD term .
   63      | MOD term . terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 60 (terms)

    terms  go to state 142


State 124

   18 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 143


State 125

   19 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 144


State 126

   27 vars: var COMMA vars .

    $default  reduce using rule 27 (vars)


State 127

   75 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 75 (var)


State 128

   25 statement: var $@1 error expression .

    $default  reduce using rule 25 (statement)


State 129

   43 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 43 (relation_exp)


State 130

   37 relation_exp: NOT expression comp expression .

    $default  reduce using rule 37 (relation_exp)


State 131

   69 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 69 (term)


State 132

   73 expressions: expression COMMA . expressions

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    expression                 go to state 113
    multiplicative_expression  go to state 54
    term                       go to state 55
    expressions                go to state 145
    var                        go to state 56


State 133

   71 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 71 (term)


State 134

   16 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


State 135

   17 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    $default  reduce using rule 13 (statements)

    ident       go to state 38
    statements  go to state 146
    statement   go to state 40
    var         go to state 41


State 136

   31 relation_and_exps: OR relation_and_exp relation_and_exps .

    $default  reduce using rule 31 (relation_and_exps)


State 137

   35 relation_exps: AND relation_exp relation_exps .

    $default  reduce using rule 35 (relation_exps)


State 138

   55 multiplicative_expressions: SUB multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 55 (multiplicative_expressions)


State 139

   54 multiplicative_expressions: ADD multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 54 (multiplicative_expressions)


State 140

   61 terms: MULT term terms .

    $default  reduce using rule 61 (terms)


State 141

   62 terms: DIV term terms .

    $default  reduce using rule 62 (terms)


State 142

   63 terms: MOD term terms .

    $default  reduce using rule 63 (terms)


State 143

   18 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 144

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 49

    ident                      go to state 38
    bool_exp                   go to state 147
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 145

   73 expressions: expression COMMA expressions .

    $default  reduce using rule 73 (expressions)


State 146

   17 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 148


State 147

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 19 (statement)


State 148

   17 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)
