Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    9 identifiers: ident
   10            | ident COMMA identifiers

   11 ident: IDENT

   12 statements: %empty
   13           | statement SEMICOLON statements

   14 statement: var ASSIGN expression
   15          | IF bool_exp THEN statements ENDIF
   16          | IF bool_exp THEN statements ELSE statements ENDIF
   17          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   19          | READ vars
   20          | WRITE vars
   21          | CONTINUE
   22          | RETURN expression

   23 vars: var
   24     | var COMMA vars

   25 bool_exp: relation_and_exp
   26         | relation_and_exp relation_and_exps

   27 relation_and_exps: OR relation_and_exp
   28                  | OR relation_and_exp relation_and_exps

   29 relation_and_exp: relation_exp
   30                 | relation_exp relation_exps

   31 relation_exps: AND relation_exp
   32              | AND relation_exp relation_exps

   33 relation_exp: expression comp expression
   34             | NOT expression comp expression
   35             | TRUE
   36             | NOT TRUE
   37             | FALSE
   38             | NOT FALSE
   39             | L_PAREN bool_exp R_PAREN
   40             | NOT L_PAREN bool_exp R_PAREN

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 expression: multiplicative_expression
   48           | multiplicative_expression multiplicative_expressions

   49 multiplicative_expressions: ADD multiplicative_expression
   50                           | SUB multiplicative_expression
   51                           | ADD multiplicative_expression multiplicative_expressions
   52                           | SUB multiplicative_expression multiplicative_expressions

   53 multiplicative_expression: term
   54                          | term terms

   55 terms: MULT term
   56      | DIV term
   57      | MOD term
   58      | MULT term terms
   59      | DIV term terms
   60      | MOD term terms

   61 term: var
   62     | SUB var
   63     | NUMBER
   64     | SUB NUMBER
   65     | L_PAREN expression R_PAREN
   66     | SUB L_PAREN expression R_PAREN
   67     | IDENT L_PAREN R_PAREN
   68     | IDENT L_PAREN expressions R_PAREN

   69 expressions: expression
   70            | expression COMMA expressions

   71 var: ident
   72    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 7 8
ARRAY (266) 8
OF (267) 8
IF (268) 15 16
THEN (269) 15 16
ENDIF (270) 15 16
ELSE (271) 16
WHILE (272) 17 18
DO (273) 18
BEGINLOOP (274) 17 18
ENDLOOP (275) 17 18
CONTINUE (276) 21
READ (277) 19
WRITE (278) 20
AND (279) 31 32
OR (280) 27 28
NOT (281) 34 36 38 40
TRUE (282) 35 36
FALSE (283) 37 38
RETURN (284) 22
SUB (285) 50 52 62 64 66
ADD (286) 49 51
MULT (287) 55 58
DIV (288) 56 59
MOD (289) 57 60
EQ (290) 41
NEQ (291) 42
LT (292) 43
GT (293) 44
LTE (294) 45
GTE (295) 46
SEMICOLON (296) 4 6 13
COLON (297) 7 8
COMMA (298) 10 24 70
L_PAREN (299) 39 40 65 66 67 68
R_PAREN (300) 39 40 65 66 67 68
L_SQUARE_BRACKET (301) 8 72
R_SQUARE_BRACKET (302) 8 72
ASSIGN (303) 14
NUMBER (304) 8 63 64
IDENT (305) 4 11 67 68
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8, on right: 6
identifiers (58)
    on left: 9 10, on right: 7 8 10
ident (59)
    on left: 11, on right: 9 10 71 72
statements (60)
    on left: 12 13, on right: 4 13 15 16 17 18
statement (61)
    on left: 14 15 16 17 18 19 20 21 22, on right: 13
vars (62)
    on left: 23 24, on right: 19 20 24
bool_exp (63)
    on left: 25 26, on right: 15 16 17 18 39 40
relation_and_exps (64)
    on left: 27 28, on right: 26 28
relation_and_exp (65)
    on left: 29 30, on right: 25 26 27 28
relation_exps (66)
    on left: 31 32, on right: 30 32
relation_exp (67)
    on left: 33 34 35 36 37 38 39 40, on right: 29 30 31 32
comp (68)
    on left: 41 42 43 44 45 46, on right: 33 34
expression (69)
    on left: 47 48, on right: 14 22 33 34 65 66 69 70 72
multiplicative_expressions (70)
    on left: 49 50 51 52, on right: 48 51 52
multiplicative_expression (71)
    on left: 53 54, on right: 47 48 49 50 51 52
terms (72)
    on left: 55 56 57 58 59 60, on right: 54 58 59 60
term (73)
    on left: 61 62 63 64 65 66 67 68, on right: 53 54 55 56 57 58 59
    60
expressions (74)
    on left: 69 70, on right: 68 70
var (75)
    on left: 71 72, on right: 14 23 24 61 62


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 10

   11 ident: IDENT .

    $default  reduce using rule 11 (ident)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

    9 identifiers: ident .
   10            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (identifiers)


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   10 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 10

    identifiers  go to state 23
    ident        go to state 14


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   10 identifiers: ident COMMA identifiers .

    $default  reduce using rule 10 (identifiers)


State 24

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 28


State 27

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 10

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 38
    statement   go to state 39
    var         go to state 40


State 29

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 30

   15 statement: IF . bool_exp THEN statements ENDIF
   16          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    bool_exp                   go to state 49
    relation_and_exp           go to state 50
    relation_exp               go to state 51
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 31

   17 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    bool_exp                   go to state 56
    relation_and_exp           go to state 50
    relation_exp               go to state 51
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 32

   18 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 57


State 33

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 34

   19 statement: READ . vars

    IDENT  shift, and go to state 10

    ident  go to state 37
    vars   go to state 58
    var    go to state 59


State 35

   20 statement: WRITE . vars

    IDENT  shift, and go to state 10

    ident  go to state 37
    vars   go to state 60
    var    go to state 59


State 36

   22 statement: RETURN . expression

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    expression                 go to state 62
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 37

   71 var: ident .
   72    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 63

    $default  reduce using rule 71 (var)


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 64


State 39

   13 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 65


State 40

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 66


State 41

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 67


State 42

   34 relation_exp: NOT . expression comp expression
   36             | NOT . TRUE
   38             | NOT . FALSE
   40             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 70
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    expression                 go to state 71
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 43

   35 relation_exp: TRUE .

    $default  reduce using rule 35 (relation_exp)


State 44

   37 relation_exp: FALSE .

    $default  reduce using rule 37 (relation_exp)


State 45

   62 term: SUB . var
   64     | SUB . NUMBER
   66     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 73
    IDENT    shift, and go to state 10

    ident  go to state 37
    var    go to state 74


State 46

   39 relation_exp: L_PAREN . bool_exp R_PAREN
   65 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    bool_exp                   go to state 75
    relation_and_exp           go to state 50
    relation_exp               go to state 51
    expression                 go to state 76
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 47

   63 term: NUMBER .

    $default  reduce using rule 63 (term)


State 48

   11 ident: IDENT .
   67 term: IDENT . L_PAREN R_PAREN
   68     | IDENT . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 77

    $default  reduce using rule 11 (ident)


State 49

   15 statement: IF bool_exp . THEN statements ENDIF
   16          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 78


State 50

   25 bool_exp: relation_and_exp .
   26         | relation_and_exp . relation_and_exps

    OR  shift, and go to state 79

    $default  reduce using rule 25 (bool_exp)

    relation_and_exps  go to state 80


State 51

   29 relation_and_exp: relation_exp .
   30                 | relation_exp . relation_exps

    AND  shift, and go to state 81

    $default  reduce using rule 29 (relation_and_exp)

    relation_exps  go to state 82


State 52

   33 relation_exp: expression . comp expression

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 89


State 53

   47 expression: multiplicative_expression .
   48           | multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 47 (expression)

    multiplicative_expressions  go to state 92


State 54

   53 multiplicative_expression: term .
   54                          | term . terms

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94
    MOD   shift, and go to state 95

    $default  reduce using rule 53 (multiplicative_expression)

    terms  go to state 96


State 55

   61 term: var .

    $default  reduce using rule 61 (term)


State 56

   17 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 97


State 57

   18 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 10

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 98
    statement   go to state 39
    var         go to state 40


State 58

   19 statement: READ vars .

    $default  reduce using rule 19 (statement)


State 59

   23 vars: var .
   24     | var . COMMA vars

    COMMA  shift, and go to state 99

    $default  reduce using rule 23 (vars)


State 60

   20 statement: WRITE vars .

    $default  reduce using rule 20 (statement)


State 61

   65 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    expression                 go to state 100
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 62

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 63

   72 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    expression                 go to state 101
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 64

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 65

   13 statements: statement SEMICOLON . statements

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 10

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 102
    statement   go to state 39
    var         go to state 40


State 66

   14 statement: var ASSIGN . expression

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    expression                 go to state 103
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 67

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 68

   36 relation_exp: NOT TRUE .

    $default  reduce using rule 36 (relation_exp)


State 69

   38 relation_exp: NOT FALSE .

    $default  reduce using rule 38 (relation_exp)


State 70

   40 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   65 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    bool_exp                   go to state 104
    relation_and_exp           go to state 50
    relation_exp               go to state 51
    expression                 go to state 76
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 71

   34 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 105


State 72

   66 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    expression                 go to state 106
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 73

   64 term: SUB NUMBER .

    $default  reduce using rule 64 (term)


State 74

   62 term: SUB var .

    $default  reduce using rule 62 (term)


State 75

   39 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 107


State 76

   33 relation_exp: expression . comp expression
   65 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 83
    NEQ      shift, and go to state 84
    LT       shift, and go to state 85
    GT       shift, and go to state 86
    LTE      shift, and go to state 87
    GTE      shift, and go to state 88
    R_PAREN  shift, and go to state 108

    comp  go to state 89


State 77

   67 term: IDENT L_PAREN . R_PAREN
   68     | IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    R_PAREN  shift, and go to state 109
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    expression                 go to state 110
    multiplicative_expression  go to state 53
    term                       go to state 54
    expressions                go to state 111
    var                        go to state 55


State 78

   15 statement: IF bool_exp THEN . statements ENDIF
   16          | IF bool_exp THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 10

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 112
    statement   go to state 39
    var         go to state 40


State 79

   27 relation_and_exps: OR . relation_and_exp
   28                  | OR . relation_and_exp relation_and_exps

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    relation_and_exp           go to state 113
    relation_exp               go to state 51
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 80

   26 bool_exp: relation_and_exp relation_and_exps .

    $default  reduce using rule 26 (bool_exp)


State 81

   31 relation_exps: AND . relation_exp
   32              | AND . relation_exp relation_exps

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    relation_exp               go to state 114
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 82

   30 relation_and_exp: relation_exp relation_exps .

    $default  reduce using rule 30 (relation_and_exp)


State 83

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


State 84

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


State 85

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 86

   44 comp: GT .

    $default  reduce using rule 44 (comp)


State 87

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


State 88

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 89

   33 relation_exp: expression comp . expression

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    expression                 go to state 115
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 90

   50 multiplicative_expressions: SUB . multiplicative_expression
   52                           | SUB . multiplicative_expression multiplicative_expressions

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    multiplicative_expression  go to state 116
    term                       go to state 54
    var                        go to state 55


State 91

   49 multiplicative_expressions: ADD . multiplicative_expression
   51                           | ADD . multiplicative_expression multiplicative_expressions

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    multiplicative_expression  go to state 117
    term                       go to state 54
    var                        go to state 55


State 92

   48 expression: multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 48 (expression)


State 93

   55 terms: MULT . term
   58      | MULT . term terms

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident  go to state 37
    term   go to state 118
    var    go to state 55


State 94

   56 terms: DIV . term
   59      | DIV . term terms

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident  go to state 37
    term   go to state 119
    var    go to state 55


State 95

   57 terms: MOD . term
   60      | MOD . term terms

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident  go to state 37
    term   go to state 120
    var    go to state 55


State 96

   54 multiplicative_expression: term terms .

    $default  reduce using rule 54 (multiplicative_expression)


State 97

   17 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 10

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 121
    statement   go to state 39
    var         go to state 40


State 98

   18 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 122


State 99

   24 vars: var COMMA . vars

    IDENT  shift, and go to state 10

    ident  go to state 37
    vars   go to state 123
    var    go to state 59


State 100

   65 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108


State 101

   72 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 124


State 102

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 103

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 104

   40 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 125


State 105

   34 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    expression                 go to state 126
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 106

   66 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 127


State 107

   39 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 39 (relation_exp)


State 108

   65 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 65 (term)


State 109

   67 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 67 (term)


State 110

   69 expressions: expression .
   70            | expression . COMMA expressions

    COMMA  shift, and go to state 128

    $default  reduce using rule 69 (expressions)


State 111

   68 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 129


State 112

   15 statement: IF bool_exp THEN statements . ENDIF
   16          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 130
    ELSE   shift, and go to state 131


State 113

   27 relation_and_exps: OR relation_and_exp .
   28                  | OR relation_and_exp . relation_and_exps

    OR  shift, and go to state 79

    $default  reduce using rule 27 (relation_and_exps)

    relation_and_exps  go to state 132


State 114

   31 relation_exps: AND relation_exp .
   32              | AND relation_exp . relation_exps

    AND  shift, and go to state 81

    $default  reduce using rule 31 (relation_exps)

    relation_exps  go to state 133


State 115

   33 relation_exp: expression comp expression .

    $default  reduce using rule 33 (relation_exp)


State 116

   50 multiplicative_expressions: SUB multiplicative_expression .
   52                           | SUB multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 50 (multiplicative_expressions)

    multiplicative_expressions  go to state 134


State 117

   49 multiplicative_expressions: ADD multiplicative_expression .
   51                           | ADD multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 49 (multiplicative_expressions)

    multiplicative_expressions  go to state 135


State 118

   55 terms: MULT term .
   58      | MULT term . terms

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94
    MOD   shift, and go to state 95

    $default  reduce using rule 55 (terms)

    terms  go to state 136


State 119

   56 terms: DIV term .
   59      | DIV term . terms

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94
    MOD   shift, and go to state 95

    $default  reduce using rule 56 (terms)

    terms  go to state 137


State 120

   57 terms: MOD term .
   60      | MOD term . terms

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94
    MOD   shift, and go to state 95

    $default  reduce using rule 57 (terms)

    terms  go to state 138


State 121

   17 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 139


State 122

   18 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 140


State 123

   24 vars: var COMMA vars .

    $default  reduce using rule 24 (vars)


State 124

   72 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 72 (var)


State 125

   40 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 40 (relation_exp)


State 126

   34 relation_exp: NOT expression comp expression .

    $default  reduce using rule 34 (relation_exp)


State 127

   66 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 66 (term)


State 128

   70 expressions: expression COMMA . expressions

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    expression                 go to state 110
    multiplicative_expression  go to state 53
    term                       go to state 54
    expressions                go to state 141
    var                        go to state 55


State 129

   68 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 68 (term)


State 130

   15 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 15 (statement)


State 131

   16 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 10

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 142
    statement   go to state 39
    var         go to state 40


State 132

   28 relation_and_exps: OR relation_and_exp relation_and_exps .

    $default  reduce using rule 28 (relation_and_exps)


State 133

   32 relation_exps: AND relation_exp relation_exps .

    $default  reduce using rule 32 (relation_exps)


State 134

   52 multiplicative_expressions: SUB multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 52 (multiplicative_expressions)


State 135

   51 multiplicative_expressions: ADD multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 51 (multiplicative_expressions)


State 136

   58 terms: MULT term terms .

    $default  reduce using rule 58 (terms)


State 137

   59 terms: DIV term terms .

    $default  reduce using rule 59 (terms)


State 138

   60 terms: MOD term terms .

    $default  reduce using rule 60 (terms)


State 139

   17 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 140

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48

    ident                      go to state 37
    bool_exp                   go to state 143
    relation_and_exp           go to state 50
    relation_exp               go to state 51
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55


State 141

   70 expressions: expression COMMA expressions .

    $default  reduce using rule 70 (expressions)


State 142

   16 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 144


State 143

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 18 (statement)


State 144

   16 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 16 (statement)
