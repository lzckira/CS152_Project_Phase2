Terminals unused in grammar

   ERROR


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 $@1: %empty

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    7 declarations: %empty
    8             | declarations declaration SEMICOLON
    9             | declarations declaration

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   12 $@2: %empty

   13 declaration: identifiers $@2 error errorDeclaration
   14            | identifiers INTEGER
   15            | identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   16 errorDeclaration: INTEGER
   17                 | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   18 identifiers: ident
   19            | ident COMMA identifiers

   20 ident: IDENT

   21 statements: %empty
   22           | statements statement SEMICOLON
   23           | statements statement

   24 statement: var ASSIGN expression
   25          | IF bool_exp THEN statements ENDIF
   26          | IF bool_exp THEN statements ELSE statements ENDIF
   27          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   28          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   29          | READ vars
   30          | WRITE vars
   31          | CONTINUE
   32          | RETURN expression

   33 $@3: %empty

   34 statement: var $@3 error expression

   35 vars: var
   36     | var COMMA vars

   37 bool_exp: relation_and_exp
   38         | relation_and_exp relation_and_exps

   39 relation_and_exps: OR relation_and_exp
   40                  | OR relation_and_exp relation_and_exps

   41 relation_and_exp: relation_exp
   42                 | relation_exp relation_exps

   43 relation_exps: AND relation_exp
   44              | AND relation_exp relation_exps

   45 relation_exp: expression comp expression
   46             | NOT expression comp expression
   47             | TRUE
   48             | NOT TRUE
   49             | FALSE
   50             | NOT FALSE
   51             | L_PAREN bool_exp R_PAREN
   52             | NOT L_PAREN bool_exp R_PAREN

   53 comp: EQ
   54     | NEQ
   55     | LT
   56     | GT
   57     | LTE
   58     | GTE

   59 expression: multiplicative_expression
   60           | multiplicative_expression multiplicative_expressions

   61 multiplicative_expressions: ADD multiplicative_expression
   62                           | SUB multiplicative_expression
   63                           | ADD multiplicative_expression multiplicative_expressions
   64                           | SUB multiplicative_expression multiplicative_expressions

   65 multiplicative_expression: term
   66                          | term terms

   67 terms: MULT term
   68      | DIV term
   69      | MOD term
   70      | MULT term terms
   71      | DIV term terms
   72      | MOD term terms

   73 term: var
   74     | SUB var
   75     | NUMBER
   76     | SUB NUMBER
   77     | L_PAREN expression R_PAREN
   78     | SUB L_PAREN expression R_PAREN
   79     | IDENT L_PAREN R_PAREN
   80     | IDENT L_PAREN expressions R_PAREN

   81 expressions: expression
   82            | expression COMMA expressions

   83 var: ident
   84    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 13 34
FUNCTION (258) 4 6
BEGIN_PARAMS (259) 4 6
END_PARAMS (260) 4 6
BEGIN_LOCALS (261) 4 6
END_LOCALS (262) 4 6
BEGIN_BODY (263) 4 6
END_BODY (264) 4 6
INTEGER (265) 10 11 14 15 16 17
ARRAY (266) 11 15 17
OF (267) 11 15 17
IF (268) 25 26
THEN (269) 25 26
ENDIF (270) 25 26
ELSE (271) 26
WHILE (272) 27 28
DO (273) 28
BEGINLOOP (274) 27 28
ENDLOOP (275) 27 28
CONTINUE (276) 31
READ (277) 29
WRITE (278) 30
AND (279) 43 44
OR (280) 39 40
NOT (281) 46 48 50 52
TRUE (282) 47 48
FALSE (283) 49 50
RETURN (284) 32
SUB (285) 62 64 74 76 78
ADD (286) 61 63
MULT (287) 67 70
DIV (288) 68 71
MOD (289) 69 72
EQ (290) 53
NEQ (291) 54
LT (292) 55
GT (293) 56
LTE (294) 57
GTE (295) 58
SEMICOLON (296) 4 8 22
COLON (297) 10 11
COMMA (298) 19 36 82
L_PAREN (299) 51 52 77 78 79 80
R_PAREN (300) 51 52 77 78 79 80
L_SQUARE_BRACKET (301) 11 15 17 84
R_SQUARE_BRACKET (302) 11 15 17 84
ASSIGN (303) 24
NUMBER (304) 11 15 17 75 76
IDENT (305) 20 79 80
ERROR (306)
UMINUS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4 6, on right: 3
$@1 (57)
    on left: 5, on right: 6
declarations (58)
    on left: 7 8 9, on right: 4 6 8 9
declaration (59)
    on left: 10 11 13 14 15, on right: 8 9
$@2 (60)
    on left: 12, on right: 13
errorDeclaration (61)
    on left: 16 17, on right: 13
identifiers (62)
    on left: 18 19, on right: 10 11 13 14 15 19
ident (63)
    on left: 20, on right: 4 6 18 19 83 84
statements (64)
    on left: 21 22 23, on right: 4 6 22 23 25 26 27 28
statement (65)
    on left: 24 25 26 27 28 29 30 31 32 34, on right: 22 23
$@3 (66)
    on left: 33, on right: 34
vars (67)
    on left: 35 36, on right: 29 30 36
bool_exp (68)
    on left: 37 38, on right: 25 26 27 28 51 52
relation_and_exps (69)
    on left: 39 40, on right: 38 40
relation_and_exp (70)
    on left: 41 42, on right: 37 38 39 40
relation_exps (71)
    on left: 43 44, on right: 42 44
relation_exp (72)
    on left: 45 46 47 48 49 50 51 52, on right: 41 42 43 44
comp (73)
    on left: 53 54 55 56 57 58, on right: 45 46
expression (74)
    on left: 59 60, on right: 24 32 34 45 46 77 78 81 82 84
multiplicative_expressions (75)
    on left: 61 62 63 64, on right: 60 63 64
multiplicative_expression (76)
    on left: 65 66, on right: 59 60 61 62 63 64
terms (77)
    on left: 67 68 69 70 71 72, on right: 66 70 71 72
term (78)
    on left: 73 74 75 76 77 78 79 80, on right: 65 66 67 68 69 70 71
    72
expressions (79)
    on left: 81 82, on right: 80 82
var (80)
    on left: 83 84, on right: 24 34 35 36 73 74


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    6         | FUNCTION . ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   20 ident: IDENT .

    $default  reduce using rule 20 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    6         | FUNCTION ident . $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9

    $default  reduce using rule 5 ($@1)

    $@1  go to state 10


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 10

    6 function: FUNCTION ident $@1 . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 12


State 11

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (declarations)

    declarations  go to state 13


State 12

    6 function: FUNCTION ident $@1 BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (declarations)

    declarations  go to state 14


State 13

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    8 declarations: declarations . declaration SEMICOLON
    9             | declarations . declaration

    END_PARAMS  shift, and go to state 15
    IDENT       shift, and go to state 5

    declaration  go to state 16
    identifiers  go to state 17
    ident        go to state 18


State 14

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    8 declarations: declarations . declaration SEMICOLON
    9             | declarations . declaration

    END_PARAMS  shift, and go to state 19
    IDENT       shift, and go to state 5

    declaration  go to state 16
    identifiers  go to state 17
    ident        go to state 18


State 15

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 16

    8 declarations: declarations declaration . SEMICOLON
    9             | declarations declaration .

    SEMICOLON  shift, and go to state 21

    $default  reduce using rule 9 (declarations)


State 17

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | identifiers . $@2 error errorDeclaration
   14            | identifiers . INTEGER
   15            | identifiers . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23
    COLON    shift, and go to state 24

    $default  reduce using rule 12 ($@2)

    $@2  go to state 25


State 18

   18 identifiers: ident .
   19            | ident . COMMA identifiers

    COMMA  shift, and go to state 26

    $default  reduce using rule 18 (identifiers)


State 19

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 27


State 20

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (declarations)

    declarations  go to state 28


State 21

    8 declarations: declarations declaration SEMICOLON .

    $default  reduce using rule 8 (declarations)


State 22

   14 declaration: identifiers INTEGER .

    $default  reduce using rule 14 (declaration)


State 23

   15 declaration: identifiers ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 29


State 24

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 30
    ARRAY    shift, and go to state 31


State 25

   13 declaration: identifiers $@2 . error errorDeclaration

    error  shift, and go to state 32


State 26

   19 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 33
    ident        go to state 18


State 27

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (declarations)

    declarations  go to state 34


State 28

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY
    8 declarations: declarations . declaration SEMICOLON
    9             | declarations . declaration

    END_LOCALS  shift, and go to state 35
    IDENT       shift, and go to state 5

    declaration  go to state 16
    identifiers  go to state 17
    ident        go to state 18


State 29

   15 declaration: identifiers ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 36


State 30

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 31

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 37


State 32

   13 declaration: identifiers $@2 error . errorDeclaration

    INTEGER  shift, and go to state 38
    ARRAY    shift, and go to state 39

    errorDeclaration  go to state 40


State 33

   19 identifiers: ident COMMA identifiers .

    $default  reduce using rule 19 (identifiers)


State 34

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY
    8 declarations: declarations . declaration SEMICOLON
    9             | declarations . declaration

    END_LOCALS  shift, and go to state 41
    IDENT       shift, and go to state 5

    declaration  go to state 16
    identifiers  go to state 17
    ident        go to state 18


State 35

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 42


State 36

   15 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 43


State 37

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 44


State 38

   16 errorDeclaration: INTEGER .

    $default  reduce using rule 16 (errorDeclaration)


State 39

   17 errorDeclaration: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 45


State 40

   13 declaration: identifiers $@2 error errorDeclaration .

    $default  reduce using rule 13 (declaration)


State 41

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 46


State 42

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    $default  reduce using rule 21 (statements)

    statements  go to state 47


State 43

   15 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 48


State 44

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 49


State 45

   17 errorDeclaration: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 50


State 46

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    $default  reduce using rule 21 (statements)

    statements  go to state 51


State 47

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY
   22 statements: statements . statement SEMICOLON
   23           | statements . statement

    END_BODY  shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    RETURN    shift, and go to state 59
    IDENT     shift, and go to state 5

    ident      go to state 60
    statement  go to state 61
    var        go to state 62


State 48

   15 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 63


State 49

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 64


State 50

   17 errorDeclaration: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 65


State 51

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY
   22 statements: statements . statement SEMICOLON
   23           | statements . statement

    END_BODY  shift, and go to state 66
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    RETURN    shift, and go to state 59
    IDENT     shift, and go to state 5

    ident      go to state 60
    statement  go to state 61
    var        go to state 62


State 52

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 53

   25 statement: IF . bool_exp THEN statements ENDIF
   26          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    bool_exp                   go to state 74
    relation_and_exp           go to state 75
    relation_exp               go to state 76
    expression                 go to state 77
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 54

   27 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    bool_exp                   go to state 81
    relation_and_exp           go to state 75
    relation_exp               go to state 76
    expression                 go to state 77
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 55

   28 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 82


State 56

   31 statement: CONTINUE .

    $default  reduce using rule 31 (statement)


State 57

   29 statement: READ . vars

    IDENT  shift, and go to state 5

    ident  go to state 60
    vars   go to state 83
    var    go to state 84


State 58

   30 statement: WRITE . vars

    IDENT  shift, and go to state 5

    ident  go to state 60
    vars   go to state 85
    var    go to state 84


State 59

   32 statement: RETURN . expression

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 87
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 60

   83 var: ident .
   84    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 88

    $default  reduce using rule 83 (var)


State 61

   22 statements: statements statement . SEMICOLON
   23           | statements statement .

    SEMICOLON  shift, and go to state 89

    $default  reduce using rule 23 (statements)


State 62

   24 statement: var . ASSIGN expression
   34          | var . $@3 error expression

    ASSIGN  shift, and go to state 90

    $default  reduce using rule 33 ($@3)

    $@3  go to state 91


State 63

   15 declaration: identifiers ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 15 (declaration)


State 64

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 92


State 65

   17 errorDeclaration: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 93


State 66

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 6 (function)


State 67

   46 relation_exp: NOT . expression comp expression
   48             | NOT . TRUE
   50             | NOT . FALSE
   52             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 94
    FALSE    shift, and go to state 95
    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 96
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 97
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 68

   47 relation_exp: TRUE .

    $default  reduce using rule 47 (relation_exp)


State 69

   49 relation_exp: FALSE .

    $default  reduce using rule 49 (relation_exp)


State 70

   74 term: SUB . var
   76     | SUB . NUMBER
   78     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 98
    NUMBER   shift, and go to state 99
    IDENT    shift, and go to state 5

    ident  go to state 60
    var    go to state 100


State 71

   51 relation_exp: L_PAREN . bool_exp R_PAREN
   77 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    bool_exp                   go to state 101
    relation_and_exp           go to state 75
    relation_exp               go to state 76
    expression                 go to state 102
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 72

   75 term: NUMBER .

    $default  reduce using rule 75 (term)


State 73

   20 ident: IDENT .
   79 term: IDENT . L_PAREN R_PAREN
   80     | IDENT . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 103

    $default  reduce using rule 20 (ident)


State 74

   25 statement: IF bool_exp . THEN statements ENDIF
   26          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 104


State 75

   37 bool_exp: relation_and_exp .
   38         | relation_and_exp . relation_and_exps

    OR  shift, and go to state 105

    $default  reduce using rule 37 (bool_exp)

    relation_and_exps  go to state 106


State 76

   41 relation_and_exp: relation_exp .
   42                 | relation_exp . relation_exps

    AND  shift, and go to state 107

    $default  reduce using rule 41 (relation_and_exp)

    relation_exps  go to state 108


State 77

   45 relation_exp: expression . comp expression

    EQ   shift, and go to state 109
    NEQ  shift, and go to state 110
    LT   shift, and go to state 111
    GT   shift, and go to state 112
    LTE  shift, and go to state 113
    GTE  shift, and go to state 114

    comp  go to state 115


State 78

   59 expression: multiplicative_expression .
   60           | multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 116
    ADD  shift, and go to state 117

    $default  reduce using rule 59 (expression)

    multiplicative_expressions  go to state 118


State 79

   65 multiplicative_expression: term .
   66                          | term . terms

    MULT  shift, and go to state 119
    DIV   shift, and go to state 120
    MOD   shift, and go to state 121

    $default  reduce using rule 65 (multiplicative_expression)

    terms  go to state 122


State 80

   73 term: var .

    $default  reduce using rule 73 (term)


State 81

   27 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 123


State 82

   28 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    $default  reduce using rule 21 (statements)

    statements  go to state 124


State 83

   29 statement: READ vars .

    $default  reduce using rule 29 (statement)


State 84

   35 vars: var .
   36     | var . COMMA vars

    COMMA  shift, and go to state 125

    $default  reduce using rule 35 (vars)


State 85

   30 statement: WRITE vars .

    $default  reduce using rule 30 (statement)


State 86

   77 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 126
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 87

   32 statement: RETURN expression .

    $default  reduce using rule 32 (statement)


State 88

   84 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 127
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 89

   22 statements: statements statement SEMICOLON .

    $default  reduce using rule 22 (statements)


State 90

   24 statement: var ASSIGN . expression

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 128
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 91

   34 statement: var $@3 . error expression

    error  shift, and go to state 129


State 92

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 93

   17 errorDeclaration: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 130


State 94

   48 relation_exp: NOT TRUE .

    $default  reduce using rule 48 (relation_exp)


State 95

   50 relation_exp: NOT FALSE .

    $default  reduce using rule 50 (relation_exp)


State 96

   52 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   77 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    bool_exp                   go to state 131
    relation_and_exp           go to state 75
    relation_exp               go to state 76
    expression                 go to state 102
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 97

   46 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 109
    NEQ  shift, and go to state 110
    LT   shift, and go to state 111
    GT   shift, and go to state 112
    LTE  shift, and go to state 113
    GTE  shift, and go to state 114

    comp  go to state 132


State 98

   78 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 133
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 99

   76 term: SUB NUMBER .

    $default  reduce using rule 76 (term)


State 100

   74 term: SUB var .

    $default  reduce using rule 74 (term)


State 101

   51 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 134


State 102

   45 relation_exp: expression . comp expression
   77 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 109
    NEQ      shift, and go to state 110
    LT       shift, and go to state 111
    GT       shift, and go to state 112
    LTE      shift, and go to state 113
    GTE      shift, and go to state 114
    R_PAREN  shift, and go to state 135

    comp  go to state 115


State 103

   79 term: IDENT L_PAREN . R_PAREN
   80     | IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    R_PAREN  shift, and go to state 136
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 137
    multiplicative_expression  go to state 78
    term                       go to state 79
    expressions                go to state 138
    var                        go to state 80


State 104

   25 statement: IF bool_exp THEN . statements ENDIF
   26          | IF bool_exp THEN . statements ELSE statements ENDIF

    $default  reduce using rule 21 (statements)

    statements  go to state 139


State 105

   39 relation_and_exps: OR . relation_and_exp
   40                  | OR . relation_and_exp relation_and_exps

    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    relation_and_exp           go to state 140
    relation_exp               go to state 76
    expression                 go to state 77
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 106

   38 bool_exp: relation_and_exp relation_and_exps .

    $default  reduce using rule 38 (bool_exp)


State 107

   43 relation_exps: AND . relation_exp
   44              | AND . relation_exp relation_exps

    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    relation_exp               go to state 141
    expression                 go to state 77
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 108

   42 relation_and_exp: relation_exp relation_exps .

    $default  reduce using rule 42 (relation_and_exp)


State 109

   53 comp: EQ .

    $default  reduce using rule 53 (comp)


State 110

   54 comp: NEQ .

    $default  reduce using rule 54 (comp)


State 111

   55 comp: LT .

    $default  reduce using rule 55 (comp)


State 112

   56 comp: GT .

    $default  reduce using rule 56 (comp)


State 113

   57 comp: LTE .

    $default  reduce using rule 57 (comp)


State 114

   58 comp: GTE .

    $default  reduce using rule 58 (comp)


State 115

   45 relation_exp: expression comp . expression

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 142
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 116

   62 multiplicative_expressions: SUB . multiplicative_expression
   64                           | SUB . multiplicative_expression multiplicative_expressions

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    multiplicative_expression  go to state 143
    term                       go to state 79
    var                        go to state 80


State 117

   61 multiplicative_expressions: ADD . multiplicative_expression
   63                           | ADD . multiplicative_expression multiplicative_expressions

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    multiplicative_expression  go to state 144
    term                       go to state 79
    var                        go to state 80


State 118

   60 expression: multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 60 (expression)


State 119

   67 terms: MULT . term
   70      | MULT . term terms

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident  go to state 60
    term   go to state 145
    var    go to state 80


State 120

   68 terms: DIV . term
   71      | DIV . term terms

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident  go to state 60
    term   go to state 146
    var    go to state 80


State 121

   69 terms: MOD . term
   72      | MOD . term terms

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident  go to state 60
    term   go to state 147
    var    go to state 80


State 122

   66 multiplicative_expression: term terms .

    $default  reduce using rule 66 (multiplicative_expression)


State 123

   27 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    $default  reduce using rule 21 (statements)

    statements  go to state 148


State 124

   22 statements: statements . statement SEMICOLON
   23           | statements . statement
   28 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    ENDLOOP   shift, and go to state 149
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    RETURN    shift, and go to state 59
    IDENT     shift, and go to state 5

    ident      go to state 60
    statement  go to state 61
    var        go to state 62


State 125

   36 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    ident  go to state 60
    vars   go to state 150
    var    go to state 84


State 126

   77 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 135


State 127

   84 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 151


State 128

   24 statement: var ASSIGN expression .

    $default  reduce using rule 24 (statement)


State 129

   34 statement: var $@3 error . expression

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 152
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 130

   17 errorDeclaration: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 17 (errorDeclaration)


State 131

   52 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 153


State 132

   46 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 154
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 133

   78 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 155


State 134

   51 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 51 (relation_exp)


State 135

   77 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 77 (term)


State 136

   79 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 79 (term)


State 137

   81 expressions: expression .
   82            | expression . COMMA expressions

    COMMA  shift, and go to state 156

    $default  reduce using rule 81 (expressions)


State 138

   80 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 157


State 139

   22 statements: statements . statement SEMICOLON
   23           | statements . statement
   25 statement: IF bool_exp THEN statements . ENDIF
   26          | IF bool_exp THEN statements . ELSE statements ENDIF

    IF        shift, and go to state 53
    ENDIF     shift, and go to state 158
    ELSE      shift, and go to state 159
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    RETURN    shift, and go to state 59
    IDENT     shift, and go to state 5

    ident      go to state 60
    statement  go to state 61
    var        go to state 62


State 140

   39 relation_and_exps: OR relation_and_exp .
   40                  | OR relation_and_exp . relation_and_exps

    OR  shift, and go to state 105

    $default  reduce using rule 39 (relation_and_exps)

    relation_and_exps  go to state 160


State 141

   43 relation_exps: AND relation_exp .
   44              | AND relation_exp . relation_exps

    AND  shift, and go to state 107

    $default  reduce using rule 43 (relation_exps)

    relation_exps  go to state 161


State 142

   45 relation_exp: expression comp expression .

    $default  reduce using rule 45 (relation_exp)


State 143

   62 multiplicative_expressions: SUB multiplicative_expression .
   64                           | SUB multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 116
    ADD  shift, and go to state 117

    $default  reduce using rule 62 (multiplicative_expressions)

    multiplicative_expressions  go to state 162


State 144

   61 multiplicative_expressions: ADD multiplicative_expression .
   63                           | ADD multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 116
    ADD  shift, and go to state 117

    $default  reduce using rule 61 (multiplicative_expressions)

    multiplicative_expressions  go to state 163


State 145

   67 terms: MULT term .
   70      | MULT term . terms

    MULT  shift, and go to state 119
    DIV   shift, and go to state 120
    MOD   shift, and go to state 121

    $default  reduce using rule 67 (terms)

    terms  go to state 164


State 146

   68 terms: DIV term .
   71      | DIV term . terms

    MULT  shift, and go to state 119
    DIV   shift, and go to state 120
    MOD   shift, and go to state 121

    $default  reduce using rule 68 (terms)

    terms  go to state 165


State 147

   69 terms: MOD term .
   72      | MOD term . terms

    MULT  shift, and go to state 119
    DIV   shift, and go to state 120
    MOD   shift, and go to state 121

    $default  reduce using rule 69 (terms)

    terms  go to state 166


State 148

   22 statements: statements . statement SEMICOLON
   23           | statements . statement
   27 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    ENDLOOP   shift, and go to state 167
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    RETURN    shift, and go to state 59
    IDENT     shift, and go to state 5

    ident      go to state 60
    statement  go to state 61
    var        go to state 62


State 149

   28 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 168


State 150

   36 vars: var COMMA vars .

    $default  reduce using rule 36 (vars)


State 151

   84 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 84 (var)


State 152

   34 statement: var $@3 error expression .

    $default  reduce using rule 34 (statement)


State 153

   52 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 52 (relation_exp)


State 154

   46 relation_exp: NOT expression comp expression .

    $default  reduce using rule 46 (relation_exp)


State 155

   78 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 78 (term)


State 156

   82 expressions: expression COMMA . expressions

    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    expression                 go to state 137
    multiplicative_expression  go to state 78
    term                       go to state 79
    expressions                go to state 169
    var                        go to state 80


State 157

   80 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 80 (term)


State 158

   25 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 25 (statement)


State 159

   26 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    $default  reduce using rule 21 (statements)

    statements  go to state 170


State 160

   40 relation_and_exps: OR relation_and_exp relation_and_exps .

    $default  reduce using rule 40 (relation_and_exps)


State 161

   44 relation_exps: AND relation_exp relation_exps .

    $default  reduce using rule 44 (relation_exps)


State 162

   64 multiplicative_expressions: SUB multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 64 (multiplicative_expressions)


State 163

   63 multiplicative_expressions: ADD multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 63 (multiplicative_expressions)


State 164

   70 terms: MULT term terms .

    $default  reduce using rule 70 (terms)


State 165

   71 terms: DIV term terms .

    $default  reduce using rule 71 (terms)


State 166

   72 terms: MOD term terms .

    $default  reduce using rule 72 (terms)


State 167

   27 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 27 (statement)


State 168

   28 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 67
    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    SUB      shift, and go to state 70
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 72
    IDENT    shift, and go to state 73

    ident                      go to state 60
    bool_exp                   go to state 171
    relation_and_exp           go to state 75
    relation_exp               go to state 76
    expression                 go to state 77
    multiplicative_expression  go to state 78
    term                       go to state 79
    var                        go to state 80


State 169

   82 expressions: expression COMMA expressions .

    $default  reduce using rule 82 (expressions)


State 170

   22 statements: statements . statement SEMICOLON
   23           | statements . statement
   26 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    IF        shift, and go to state 53
    ENDIF     shift, and go to state 172
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    RETURN    shift, and go to state 59
    IDENT     shift, and go to state 5

    ident      go to state 60
    statement  go to state 61
    var        go to state 62


State 171

   28 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 28 (statement)


State 172

   26 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 26 (statement)
