Terminals unused in grammar

   ERROR


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 $@1: %empty

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    7 declarations: %empty
    8             | declarations declaration SEMICOLON
    9             | declarations declaration

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | identifiers INTEGER

   13 identifiers: ident
   14            | ident COMMA identifiers

   15 ident: IDENT

   16 statements: %empty
   17           | statements statement SEMICOLON
   18           | statements statement

   19 statement: var ASSIGN expression
   20          | IF bool_exp THEN statements ENDIF
   21          | IF bool_exp THEN statements ELSE statements ENDIF
   22          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   23          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   24          | READ vars
   25          | WRITE vars
   26          | CONTINUE
   27          | RETURN expression

   28 $@2: %empty

   29 statement: var $@2 error expression

   30 vars: var
   31     | var COMMA vars

   32 bool_exp: relation_and_exp
   33         | relation_and_exp relation_and_exps

   34 relation_and_exps: OR relation_and_exp
   35                  | OR relation_and_exp relation_and_exps

   36 relation_and_exp: relation_exp
   37                 | relation_exp relation_exps

   38 relation_exps: AND relation_exp
   39              | AND relation_exp relation_exps

   40 relation_exp: expression comp expression
   41             | NOT expression comp expression
   42             | TRUE
   43             | NOT TRUE
   44             | FALSE
   45             | NOT FALSE
   46             | L_PAREN bool_exp R_PAREN
   47             | NOT L_PAREN bool_exp R_PAREN

   48 comp: EQ
   49     | NEQ
   50     | LT
   51     | GT
   52     | LTE
   53     | GTE

   54 expression: multiplicative_expression
   55           | multiplicative_expression multiplicative_expressions

   56 multiplicative_expressions: ADD multiplicative_expression
   57                           | SUB multiplicative_expression
   58                           | ADD multiplicative_expression multiplicative_expressions
   59                           | SUB multiplicative_expression multiplicative_expressions

   60 multiplicative_expression: term
   61                          | term terms

   62 terms: MULT term
   63      | DIV term
   64      | MOD term
   65      | MULT term terms
   66      | DIV term terms
   67      | MOD term terms

   68 term: var
   69     | SUB var
   70     | NUMBER
   71     | SUB NUMBER
   72     | L_PAREN expression R_PAREN
   73     | SUB L_PAREN expression R_PAREN
   74     | IDENT L_PAREN R_PAREN
   75     | IDENT L_PAREN expressions R_PAREN

   76 expressions: expression
   77            | expression COMMA expressions

   78 var: ident
   79    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 29
FUNCTION (258) 4 6
BEGIN_PARAMS (259) 4 6
END_PARAMS (260) 4 6
BEGIN_LOCALS (261) 4 6
END_LOCALS (262) 4 6
BEGIN_BODY (263) 4 6
END_BODY (264) 4 6
INTEGER (265) 10 11 12
ARRAY (266) 11
OF (267) 11
IF (268) 20 21
THEN (269) 20 21
ENDIF (270) 20 21
ELSE (271) 21
WHILE (272) 22 23
DO (273) 23
BEGINLOOP (274) 22 23
ENDLOOP (275) 22 23
CONTINUE (276) 26
READ (277) 24
WRITE (278) 25
AND (279) 38 39
OR (280) 34 35
NOT (281) 41 43 45 47
TRUE (282) 42 43
FALSE (283) 44 45
RETURN (284) 27
SUB (285) 57 59 69 71 73
ADD (286) 56 58
MULT (287) 62 65
DIV (288) 63 66
MOD (289) 64 67
EQ (290) 48
NEQ (291) 49
LT (292) 50
GT (293) 51
LTE (294) 52
GTE (295) 53
SEMICOLON (296) 4 8 17
COLON (297) 10 11
COMMA (298) 14 31 77
L_PAREN (299) 46 47 72 73 74 75
R_PAREN (300) 46 47 72 73 74 75
L_SQUARE_BRACKET (301) 11 79
R_SQUARE_BRACKET (302) 11 79
ASSIGN (303) 19
NUMBER (304) 11 70 71
IDENT (305) 15 74 75
ERROR (306)
UMINUS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4 6, on right: 3
$@1 (57)
    on left: 5, on right: 6
declarations (58)
    on left: 7 8 9, on right: 4 6 8 9
declaration (59)
    on left: 10 11 12, on right: 8 9
identifiers (60)
    on left: 13 14, on right: 10 11 12 14
ident (61)
    on left: 15, on right: 4 6 13 14 78 79
statements (62)
    on left: 16 17 18, on right: 4 6 17 18 20 21 22 23
statement (63)
    on left: 19 20 21 22 23 24 25 26 27 29, on right: 17 18
$@2 (64)
    on left: 28, on right: 29
vars (65)
    on left: 30 31, on right: 24 25 31
bool_exp (66)
    on left: 32 33, on right: 20 21 22 23 46 47
relation_and_exps (67)
    on left: 34 35, on right: 33 35
relation_and_exp (68)
    on left: 36 37, on right: 32 33 34 35
relation_exps (69)
    on left: 38 39, on right: 37 39
relation_exp (70)
    on left: 40 41 42 43 44 45 46 47, on right: 36 37 38 39
comp (71)
    on left: 48 49 50 51 52 53, on right: 40 41
expression (72)
    on left: 54 55, on right: 19 27 29 40 41 72 73 76 77 79
multiplicative_expressions (73)
    on left: 56 57 58 59, on right: 55 58 59
multiplicative_expression (74)
    on left: 60 61, on right: 54 55 56 57 58 59
terms (75)
    on left: 62 63 64 65 66 67, on right: 61 65 66 67
term (76)
    on left: 68 69 70 71 72 73 74 75, on right: 60 61 62 63 64 65 66
    67
expressions (77)
    on left: 76 77, on right: 75 77
var (78)
    on left: 78 79, on right: 19 29 30 31 68 69


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    6         | FUNCTION . ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   15 ident: IDENT .

    $default  reduce using rule 15 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    6         | FUNCTION ident . $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9

    $default  reduce using rule 5 ($@1)

    $@1  go to state 10


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 10

    6 function: FUNCTION ident $@1 . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 12


State 11

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (declarations)

    declarations  go to state 13


State 12

    6 function: FUNCTION ident $@1 BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (declarations)

    declarations  go to state 14


State 13

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    8 declarations: declarations . declaration SEMICOLON
    9             | declarations . declaration

    END_PARAMS  shift, and go to state 15
    IDENT       shift, and go to state 5

    declaration  go to state 16
    identifiers  go to state 17
    ident        go to state 18


State 14

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    8 declarations: declarations . declaration SEMICOLON
    9             | declarations . declaration

    END_PARAMS  shift, and go to state 19
    IDENT       shift, and go to state 5

    declaration  go to state 16
    identifiers  go to state 17
    ident        go to state 18


State 15

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 16

    8 declarations: declarations declaration . SEMICOLON
    9             | declarations declaration .

    SEMICOLON  shift, and go to state 21

    $default  reduce using rule 9 (declarations)


State 17

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   12            | identifiers . INTEGER

    INTEGER  shift, and go to state 22
    COLON    shift, and go to state 23


State 18

   13 identifiers: ident .
   14            | ident . COMMA identifiers

    COMMA  shift, and go to state 24

    $default  reduce using rule 13 (identifiers)


State 19

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 25


State 20

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (declarations)

    declarations  go to state 26


State 21

    8 declarations: declarations declaration SEMICOLON .

    $default  reduce using rule 8 (declarations)


State 22

   12 declaration: identifiers INTEGER .

    $default  reduce using rule 12 (declaration)


State 23

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 27
    ARRAY    shift, and go to state 28


State 24

   14 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 29
    ident        go to state 18


State 25

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (declarations)

    declarations  go to state 30


State 26

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY
    8 declarations: declarations . declaration SEMICOLON
    9             | declarations . declaration

    END_LOCALS  shift, and go to state 31
    IDENT       shift, and go to state 5

    declaration  go to state 16
    identifiers  go to state 17
    ident        go to state 18


State 27

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 28

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 32


State 29

   14 identifiers: ident COMMA identifiers .

    $default  reduce using rule 14 (identifiers)


State 30

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY
    8 declarations: declarations . declaration SEMICOLON
    9             | declarations . declaration

    END_LOCALS  shift, and go to state 33
    IDENT       shift, and go to state 5

    declaration  go to state 16
    identifiers  go to state 17
    ident        go to state 18


State 31

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 34


State 32

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 35


State 33

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 36


State 34

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    $default  reduce using rule 16 (statements)

    statements  go to state 37


State 35

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 38


State 36

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    $default  reduce using rule 16 (statements)

    statements  go to state 39


State 37

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY
   17 statements: statements . statement SEMICOLON
   18           | statements . statement

    END_BODY  shift, and go to state 40
    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 5

    ident      go to state 48
    statement  go to state 49
    var        go to state 50


State 38

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 51


State 39

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY
   17 statements: statements . statement SEMICOLON
   18           | statements . statement

    END_BODY  shift, and go to state 52
    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 5

    ident      go to state 48
    statement  go to state 49
    var        go to state 50


State 40

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 41

   20 statement: IF . bool_exp THEN statements ENDIF
   21          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    bool_exp                   go to state 60
    relation_and_exp           go to state 61
    relation_exp               go to state 62
    expression                 go to state 63
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 42

   22 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    bool_exp                   go to state 67
    relation_and_exp           go to state 61
    relation_exp               go to state 62
    expression                 go to state 63
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 43

   23 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 68


State 44

   26 statement: CONTINUE .

    $default  reduce using rule 26 (statement)


State 45

   24 statement: READ . vars

    IDENT  shift, and go to state 5

    ident  go to state 48
    vars   go to state 69
    var    go to state 70


State 46

   25 statement: WRITE . vars

    IDENT  shift, and go to state 5

    ident  go to state 48
    vars   go to state 71
    var    go to state 70


State 47

   27 statement: RETURN . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 73
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 48

   78 var: ident .
   79    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 74

    $default  reduce using rule 78 (var)


State 49

   17 statements: statements statement . SEMICOLON
   18           | statements statement .

    SEMICOLON  shift, and go to state 75

    $default  reduce using rule 18 (statements)


State 50

   19 statement: var . ASSIGN expression
   29          | var . $@2 error expression

    ASSIGN  shift, and go to state 76

    $default  reduce using rule 28 ($@2)

    $@2  go to state 77


State 51

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 78


State 52

    6 function: FUNCTION ident $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 6 (function)


State 53

   41 relation_exp: NOT . expression comp expression
   43             | NOT . TRUE
   45             | NOT . FALSE
   47             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 79
    FALSE    shift, and go to state 80
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 81
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 82
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 54

   42 relation_exp: TRUE .

    $default  reduce using rule 42 (relation_exp)


State 55

   44 relation_exp: FALSE .

    $default  reduce using rule 44 (relation_exp)


State 56

   69 term: SUB . var
   71     | SUB . NUMBER
   73     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 84
    IDENT    shift, and go to state 5

    ident  go to state 48
    var    go to state 85


State 57

   46 relation_exp: L_PAREN . bool_exp R_PAREN
   72 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    bool_exp                   go to state 86
    relation_and_exp           go to state 61
    relation_exp               go to state 62
    expression                 go to state 87
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 58

   70 term: NUMBER .

    $default  reduce using rule 70 (term)


State 59

   15 ident: IDENT .
   74 term: IDENT . L_PAREN R_PAREN
   75     | IDENT . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 88

    $default  reduce using rule 15 (ident)


State 60

   20 statement: IF bool_exp . THEN statements ENDIF
   21          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 89


State 61

   32 bool_exp: relation_and_exp .
   33         | relation_and_exp . relation_and_exps

    OR  shift, and go to state 90

    $default  reduce using rule 32 (bool_exp)

    relation_and_exps  go to state 91


State 62

   36 relation_and_exp: relation_exp .
   37                 | relation_exp . relation_exps

    AND  shift, and go to state 92

    $default  reduce using rule 36 (relation_and_exp)

    relation_exps  go to state 93


State 63

   40 relation_exp: expression . comp expression

    EQ   shift, and go to state 94
    NEQ  shift, and go to state 95
    LT   shift, and go to state 96
    GT   shift, and go to state 97
    LTE  shift, and go to state 98
    GTE  shift, and go to state 99

    comp  go to state 100


State 64

   54 expression: multiplicative_expression .
   55           | multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 101
    ADD  shift, and go to state 102

    $default  reduce using rule 54 (expression)

    multiplicative_expressions  go to state 103


State 65

   60 multiplicative_expression: term .
   61                          | term . terms

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 60 (multiplicative_expression)

    terms  go to state 107


State 66

   68 term: var .

    $default  reduce using rule 68 (term)


State 67

   22 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 108


State 68

   23 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    $default  reduce using rule 16 (statements)

    statements  go to state 109


State 69

   24 statement: READ vars .

    $default  reduce using rule 24 (statement)


State 70

   30 vars: var .
   31     | var . COMMA vars

    COMMA  shift, and go to state 110

    $default  reduce using rule 30 (vars)


State 71

   25 statement: WRITE vars .

    $default  reduce using rule 25 (statement)


State 72

   72 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 111
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 73

   27 statement: RETURN expression .

    $default  reduce using rule 27 (statement)


State 74

   79 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 112
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 75

   17 statements: statements statement SEMICOLON .

    $default  reduce using rule 17 (statements)


State 76

   19 statement: var ASSIGN . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 113
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 77

   29 statement: var $@2 . error expression

    error  shift, and go to state 114


State 78

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 79

   43 relation_exp: NOT TRUE .

    $default  reduce using rule 43 (relation_exp)


State 80

   45 relation_exp: NOT FALSE .

    $default  reduce using rule 45 (relation_exp)


State 81

   47 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   72 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    bool_exp                   go to state 115
    relation_and_exp           go to state 61
    relation_exp               go to state 62
    expression                 go to state 87
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 82

   41 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 94
    NEQ  shift, and go to state 95
    LT   shift, and go to state 96
    GT   shift, and go to state 97
    LTE  shift, and go to state 98
    GTE  shift, and go to state 99

    comp  go to state 116


State 83

   73 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 117
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 84

   71 term: SUB NUMBER .

    $default  reduce using rule 71 (term)


State 85

   69 term: SUB var .

    $default  reduce using rule 69 (term)


State 86

   46 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 118


State 87

   40 relation_exp: expression . comp expression
   72 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 94
    NEQ      shift, and go to state 95
    LT       shift, and go to state 96
    GT       shift, and go to state 97
    LTE      shift, and go to state 98
    GTE      shift, and go to state 99
    R_PAREN  shift, and go to state 119

    comp  go to state 100


State 88

   74 term: IDENT L_PAREN . R_PAREN
   75     | IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    R_PAREN  shift, and go to state 120
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 121
    multiplicative_expression  go to state 64
    term                       go to state 65
    expressions                go to state 122
    var                        go to state 66


State 89

   20 statement: IF bool_exp THEN . statements ENDIF
   21          | IF bool_exp THEN . statements ELSE statements ENDIF

    $default  reduce using rule 16 (statements)

    statements  go to state 123


State 90

   34 relation_and_exps: OR . relation_and_exp
   35                  | OR . relation_and_exp relation_and_exps

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    relation_and_exp           go to state 124
    relation_exp               go to state 62
    expression                 go to state 63
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 91

   33 bool_exp: relation_and_exp relation_and_exps .

    $default  reduce using rule 33 (bool_exp)


State 92

   38 relation_exps: AND . relation_exp
   39              | AND . relation_exp relation_exps

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    relation_exp               go to state 125
    expression                 go to state 63
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 93

   37 relation_and_exp: relation_exp relation_exps .

    $default  reduce using rule 37 (relation_and_exp)


State 94

   48 comp: EQ .

    $default  reduce using rule 48 (comp)


State 95

   49 comp: NEQ .

    $default  reduce using rule 49 (comp)


State 96

   50 comp: LT .

    $default  reduce using rule 50 (comp)


State 97

   51 comp: GT .

    $default  reduce using rule 51 (comp)


State 98

   52 comp: LTE .

    $default  reduce using rule 52 (comp)


State 99

   53 comp: GTE .

    $default  reduce using rule 53 (comp)


State 100

   40 relation_exp: expression comp . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 126
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 101

   57 multiplicative_expressions: SUB . multiplicative_expression
   59                           | SUB . multiplicative_expression multiplicative_expressions

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    multiplicative_expression  go to state 127
    term                       go to state 65
    var                        go to state 66


State 102

   56 multiplicative_expressions: ADD . multiplicative_expression
   58                           | ADD . multiplicative_expression multiplicative_expressions

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    multiplicative_expression  go to state 128
    term                       go to state 65
    var                        go to state 66


State 103

   55 expression: multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 55 (expression)


State 104

   62 terms: MULT . term
   65      | MULT . term terms

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident  go to state 48
    term   go to state 129
    var    go to state 66


State 105

   63 terms: DIV . term
   66      | DIV . term terms

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident  go to state 48
    term   go to state 130
    var    go to state 66


State 106

   64 terms: MOD . term
   67      | MOD . term terms

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident  go to state 48
    term   go to state 131
    var    go to state 66


State 107

   61 multiplicative_expression: term terms .

    $default  reduce using rule 61 (multiplicative_expression)


State 108

   22 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    $default  reduce using rule 16 (statements)

    statements  go to state 132


State 109

   17 statements: statements . statement SEMICOLON
   18           | statements . statement
   23 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    ENDLOOP   shift, and go to state 133
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 5

    ident      go to state 48
    statement  go to state 49
    var        go to state 50


State 110

   31 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    ident  go to state 48
    vars   go to state 134
    var    go to state 70


State 111

   72 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 119


State 112

   79 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 135


State 113

   19 statement: var ASSIGN expression .

    $default  reduce using rule 19 (statement)


State 114

   29 statement: var $@2 error . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 136
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 115

   47 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 137


State 116

   41 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 138
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 117

   73 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 139


State 118

   46 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 46 (relation_exp)


State 119

   72 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 72 (term)


State 120

   74 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 74 (term)


State 121

   76 expressions: expression .
   77            | expression . COMMA expressions

    COMMA  shift, and go to state 140

    $default  reduce using rule 76 (expressions)


State 122

   75 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 141


State 123

   17 statements: statements . statement SEMICOLON
   18           | statements . statement
   20 statement: IF bool_exp THEN statements . ENDIF
   21          | IF bool_exp THEN statements . ELSE statements ENDIF

    IF        shift, and go to state 41
    ENDIF     shift, and go to state 142
    ELSE      shift, and go to state 143
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 5

    ident      go to state 48
    statement  go to state 49
    var        go to state 50


State 124

   34 relation_and_exps: OR relation_and_exp .
   35                  | OR relation_and_exp . relation_and_exps

    OR  shift, and go to state 90

    $default  reduce using rule 34 (relation_and_exps)

    relation_and_exps  go to state 144


State 125

   38 relation_exps: AND relation_exp .
   39              | AND relation_exp . relation_exps

    AND  shift, and go to state 92

    $default  reduce using rule 38 (relation_exps)

    relation_exps  go to state 145


State 126

   40 relation_exp: expression comp expression .

    $default  reduce using rule 40 (relation_exp)


State 127

   57 multiplicative_expressions: SUB multiplicative_expression .
   59                           | SUB multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 101
    ADD  shift, and go to state 102

    $default  reduce using rule 57 (multiplicative_expressions)

    multiplicative_expressions  go to state 146


State 128

   56 multiplicative_expressions: ADD multiplicative_expression .
   58                           | ADD multiplicative_expression . multiplicative_expressions

    SUB  shift, and go to state 101
    ADD  shift, and go to state 102

    $default  reduce using rule 56 (multiplicative_expressions)

    multiplicative_expressions  go to state 147


State 129

   62 terms: MULT term .
   65      | MULT term . terms

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 62 (terms)

    terms  go to state 148


State 130

   63 terms: DIV term .
   66      | DIV term . terms

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 63 (terms)

    terms  go to state 149


State 131

   64 terms: MOD term .
   67      | MOD term . terms

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 64 (terms)

    terms  go to state 150


State 132

   17 statements: statements . statement SEMICOLON
   18           | statements . statement
   22 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    ENDLOOP   shift, and go to state 151
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 5

    ident      go to state 48
    statement  go to state 49
    var        go to state 50


State 133

   23 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 152


State 134

   31 vars: var COMMA vars .

    $default  reduce using rule 31 (vars)


State 135

   79 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 79 (var)


State 136

   29 statement: var $@2 error expression .

    $default  reduce using rule 29 (statement)


State 137

   47 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 47 (relation_exp)


State 138

   41 relation_exp: NOT expression comp expression .

    $default  reduce using rule 41 (relation_exp)


State 139

   73 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 73 (term)


State 140

   77 expressions: expression COMMA . expressions

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    expression                 go to state 121
    multiplicative_expression  go to state 64
    term                       go to state 65
    expressions                go to state 153
    var                        go to state 66


State 141

   75 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 75 (term)


State 142

   20 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 20 (statement)


State 143

   21 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    $default  reduce using rule 16 (statements)

    statements  go to state 154


State 144

   35 relation_and_exps: OR relation_and_exp relation_and_exps .

    $default  reduce using rule 35 (relation_and_exps)


State 145

   39 relation_exps: AND relation_exp relation_exps .

    $default  reduce using rule 39 (relation_exps)


State 146

   59 multiplicative_expressions: SUB multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 59 (multiplicative_expressions)


State 147

   58 multiplicative_expressions: ADD multiplicative_expression multiplicative_expressions .

    $default  reduce using rule 58 (multiplicative_expressions)


State 148

   65 terms: MULT term terms .

    $default  reduce using rule 65 (terms)


State 149

   66 terms: DIV term terms .

    $default  reduce using rule 66 (terms)


State 150

   67 terms: MOD term terms .

    $default  reduce using rule 67 (terms)


State 151

   22 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 22 (statement)


State 152

   23 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 58
    IDENT    shift, and go to state 59

    ident                      go to state 48
    bool_exp                   go to state 155
    relation_and_exp           go to state 61
    relation_exp               go to state 62
    expression                 go to state 63
    multiplicative_expression  go to state 64
    term                       go to state 65
    var                        go to state 66


State 153

   77 expressions: expression COMMA expressions .

    $default  reduce using rule 77 (expressions)


State 154

   17 statements: statements . statement SEMICOLON
   18           | statements . statement
   21 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    IF        shift, and go to state 41
    ENDIF     shift, and go to state 156
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    CONTINUE  shift, and go to state 44
    READ      shift, and go to state 45
    WRITE     shift, and go to state 46
    RETURN    shift, and go to state 47
    IDENT     shift, and go to state 5

    ident      go to state 48
    statement  go to state 49
    var        go to state 50


State 155

   23 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 23 (statement)


State 156

   21 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 21 (statement)
